2-matrix_divided.py function
==============================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Explanation
-----------

``matrix_divided(...)`` returns a new matrix that is a copy of the parameter
``matrix`` has all its elements divided by ``div``.

::

 Importing the new function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Using the test cases shown in the example:
::
    >>> matrix = [
    ...     [3, 6, 9],
    ...     [12, 15, 18]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Using a single list:
::
    >>> matrix = [
    ...     [5, 7, 9],
    ... ]
    >>> print(matrix_divided(matrix, 4))
    [[1.25, 1.75, 2.25]]

Testing the matrix without using any divisor:
::
    >>> matrix = [
    ...  [4, 5, 8],
    ...  [12, 45, 3]
    ... ]
    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
         ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Testing the matrix using a float:
::
    >>> matrix = [
    ... [4, 5, 7],
    ... [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, 0.4))
    [[10.0, 12.5, 17.5], [12.5, 15.0, 17.5]]

Testing the matrix with a negative num:
::
    >>> matrix = [
    ...  [4, 5, 6],
    ...  [4, 7, 9]
    ... ]
    >>> print(matrix_divided(matrix, -2))
    [[-2.0, -2.5, -3.0], [-2.0, -3.5, -4.5]]

Testing the matrix with negative values:
::
    >>> matrix = [
    ... [-2, -1, -4],
    ... [-2, -5, -6]
    ... ]
    >>> print(matrix_divided(matrix, 2))
    [[-1.0, -0.5, -2.0], [-1.0, -2.5, -3.0]]

Testing to see if it handles incorrect arguments:
::
    >>> matrix = [
    ... [2, 3, 5],
    ... [4]
    ... ]
    >>> print(matrix_divided(matrix, 2))
    Traceback (most recent call last):
       ...
    TypeError: Each row of the matrix must have the same size

Testing to see if it divides with 0:
::
    >>> matrix = [
    ... [3, 4, 5],
    ... [3, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
       ...
    ZeroDivisionError: division by zero

Testing to see if it works with empty matrix:
::
    >>> matrix = [
    ... [],
    ... []
    ... ]
    >>> print(matrix_divided(matrix, 2))
    [[], []]

Testing with strings:
::
    >>> matrix = [
    ... [2, 3, 5],
    ... [3, 5, 7]
    ... ]
    >>> print(matrix_divided(matrix, "2"))
    Traceback (most recent call last):
       ...
    TypeError: div must be a number

Testing with alphabets:
::
    >>> matrix = [
    ... [2, 4, 5],
    ... [3, 5, 7]
    ... ]
    >>> print(matrix_divided(matrix, "string"))
    Traceback (most recent call last):
       ...
    TypeError: div must be a number
